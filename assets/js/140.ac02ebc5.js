(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{456:function(t,s,e){"use strict";e.r(s);var n=e(18),a=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),s("p",[t._v("static 파일을 제공할 수 있는 웹서버이다.")]),t._v(" "),s("p",[t._v("대표적인 웹서버 아파치와는 다르게 비동기로 작동한다.")]),t._v(" "),s("p",[t._v("서버에 많은 부하가 생길 경우의 성능을 예측하기 쉽게 해준다.")]),t._v(" "),s("h2",{attrs:{id:"설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설치"}},[t._v("#")]),t._v(" 설치")]),t._v(" "),s("p",[t._v("ubuntu 16 기준으로 작성하였습니다.")]),t._v(" "),s("p",[t._v("ubuntu 18에서는 apt-get 명령어가 apt로 변경되었습니다.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo apt-get update\nsudo apt-get install nginx\n")])])]),s("p",[t._v("웹브라우저에 ip주소를 입력하고 접속하면 welcome to nginx 화면이 나온다.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1. 서비스 목록을 확인\n - service --status-all|grep +\n2. 방화벽 확인\n - sudo ufw app list\n - sudo ufw allow 'Nginx HTTP'\n - sudo ufw status\n3. 서비스되는지 확인\n - systemctl status nginx\n4. 서비스 정지\n - sudo systemctl stop nginx\n - stop 외에 start, restart, reload, disable, enable 명령어가 있다.\n5. cd /var/www/html => build 된 project를 deploy하면 된다.\n6. 로그 확인\n - /var/log/nginx/access.log 혹은 error.log\n")])])]),s("h2",{attrs:{id:"간단한-설정-방법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#간단한-설정-방법"}},[t._v("#")]),t._v(" 간단한 설정 방법")]),t._v(" "),s("p",[t._v("ubuntu 16버전 이상 기준 설정파일이 있는곳")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("vi /etc/nginx/sites-available/default\nvi /etc/nginx/nginx.conf\n")])])]),s("p",[t._v("nginx에 여러개의 웹이 올라갈거라면")]),t._v(" "),s("p",[t._v("default 대신에 도메인을 정의하고")]),t._v(" "),s("p",[t._v("정의한 도메인을 default에 설정해주면 된다.")]),t._v(" "),s("p",[t._v("모듈로 관리해서 편해진다.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("server {\n  listen  80;\n  server_name boseok.me;\n  return 301 https://$host$request_uri;\n  # https로 redirect. or proxy_pass를 사용하자.\n}\n\nserver {\n  # SSL configuration\n  listen 443 ssl default_server;\n  listen [::]:443 ssl default_server;\n  # https 기본포트로 설정. 다른 포트를 입력하면 접속할때 도메인 뒤에 포트번호가 붙어야한다.\n\n  ssl_certificate /인증서경로/fullchain.pem;\n  ssl_certificate_key /인증서경로/privkey.pem; ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_ciphers HIGH:!aNULL:!MD5;\n  # 인증서 설정\n\n  root /var/www/boseok_log/build;\n  # 설정한 포트로 접속할때, 기본 path\n\n  server_name boseok.me;\n\n  # path뒤에 param을 설정할 수 있다. ex) location /boseok {...} \n  location / { \n    # SPA이기때문에 설정해놓았습니다.\n    try_files $uri $uri/ /index.html;\n  }\n\n}\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);