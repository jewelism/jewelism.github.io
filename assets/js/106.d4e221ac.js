(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{423:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"자바스크립트-코어"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트-코어"}},[t._v("#")]),t._v(" 자바스크립트 코어")]),t._v(" "),s("p",[t._v("자바스크립트 핵심 개념 정리")]),t._v(" "),s("h2",{attrs:{id:"이벤트루프-event-loop-태스크큐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#이벤트루프-event-loop-태스크큐"}},[t._v("#")]),t._v(" 이벤트루프 (Event Loop), 태스크큐")]),t._v(" "),s("p",[t._v("js는 싱글스레드인데 동시에 많은 이벤트들을 어떻게 처리할까?")]),t._v(" "),s("p",[t._v("js는 기본적으로 싱글스레드기반 언어이다.")]),t._v(" "),s("p",[t._v("이벤트루프는 콜스택과 태스크큐를 지켜보고있다가 콜스택이 비어있으면")]),t._v(" "),s("p",[t._v("태스크큐에서 첫번째 이벤트를 콜스택에 넣어주는 일을하고, 그것을 tick이라고한다.")]),t._v(" "),s("p",[t._v("콜 스택이 비어 있고 태스크 큐에 콜백 함수가 있는 경우, 함수는 큐에서 제외되고 실행될 콜 스택으로 푸시됩니다.")]),t._v(" "),s("p",[t._v("이벤트루프는 ECMAScript의 스펙이 아니다. 구동 환경측에서 구현해야한다.")]),t._v(" "),s("p",[t._v("그래서 노드는 비동기 io를 지원하기 위해 libuv라이브러리를 사용하는것이다.")]),t._v(" "),s("p",[t._v("브라우저도 마찬가지로 자바스크립트 엔진외에 별도 구현체가 있을것이다.")]),t._v(" "),s("p",[t._v("이 말은 자바스크립트 엔진은 하나의 콜스택만 사용한다는 뜻이다.")]),t._v(" "),s("p",[t._v("결국 자바스크립트 언어설계자체는 싱글스레드이므로 block되는 코드가 존재한다면 그냥 block된다.")]),t._v(" "),s("p",[t._v("크롬같은경우는 내부적으로 여러 스레드를 사용하는데, "),s("RouterLink",{attrs:{to:"/browser/chrome.html"}},[t._v("그것은 여기에서..")])],1),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"호이스팅-hoisting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#호이스팅-hoisting"}},[t._v("#")]),t._v(" 호이스팅(Hoisting)")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("일반적인 언어에서 위의 예제코드를 실행한다면 에러가 날것이다.")]),t._v(" "),s("p",[t._v("js에서는 특이하게도 선언전에 변수를 참조해도 에러가 아니다. (var한정)")]),t._v(" "),s("p",[t._v("ES6에서는 이런 문제를 해결하기위해 let 사용을 권장하고 있다.")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ref error - not defined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"오해"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#오해"}},[t._v("#")]),t._v(" 오해")]),t._v(" "),s("p",[t._v("위의 설명에서 보는것과 같이 선언전에 참조할 수 있으므로")]),t._v(" "),s("p",[s("code",[t._v("변수 선언")]),t._v("이나 "),s("code",[t._v("함수")]),t._v("가 코드 상단으로 끌어올려지는 것처럼 보인다.")]),t._v(" "),s("p",[t._v("하지만 끌어올려지는게 아니다.")]),t._v(" "),s("p",[t._v("코드는 그 위치에 그대로 있다.")]),t._v(" "),s("h3",{attrs:{id:"진짜-개념"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#진짜-개념"}},[t._v("#")]),t._v(" 진짜 개념")]),t._v(" "),s("p",[s("code",[t._v("컴파일 단계")]),t._v("에서 스코프가 생성되고 변수나 함수가 차지할 메모리를 즉시 할당한다.")]),t._v(" "),s("p",[t._v("이것이 호이스팅이다.")]),t._v(" "),s("p",[t._v("그래서 스코프내에서 선언 전에 참조할수있고, 선언이 끌어올려지는 것처럼 보인다.")]),t._v(" "),s("p",[t._v("그래서 위의 예제같은 코드가 있으면 변수선언의 경우 undefined가 뜨지만,")]),t._v(" "),s("p",[t._v("아래 예시처럼 함수표현식이 아닌 함수선언식으로하면, 함수가 동작한다.")]),t._v(" "),s("p",[s("em",[t._v("참고")])]),t._v(" "),s("p",[t._v("함수표현식")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// not working")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...some code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("함수 선언식")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// working")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...some code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"실행컨텍스트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#실행컨텍스트"}},[t._v("#")]),t._v(" 실행컨텍스트")]),t._v(" "),s("p",[t._v("실행컨텍스트란 실행 가능한 코드를 형상화하고 구분하는 추상적인 개념이다.")]),t._v(" "),s("p",[t._v("컴파일단계에서 전역 컨텍스트가 생기고 "),s("a",{attrs:{href:"#%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85(Hoisting)"}},[t._v("호이스팅")]),t._v("이 일어난다.")]),t._v(" "),s("p",[t._v("ES6는 함수레벨과 블록레벨의 "),s("RouterLink",{attrs:{to:"/js/scope.html#lexical-scope-static-scope-dynamic-scope"}},[t._v("렉시컬스코프")]),t._v("이다.")],1),t._v(" "),s("p",[t._v("함수마다 각각의 함수 컨텍스트가 생성된다.")]),t._v(" "),s("p",[t._v("그리고 함수가 리턴하면 그 함수의 컨텍스트가 사라진다.")]),t._v(" "),s("p",[t._v("전역 컨텍스트는 프로그램이 종료되면 사라진다.")]),t._v(" "),s("p",[t._v("컨텍스트는 전역컨텍스트부터 스택형태로 쌓인다.")]),t._v(" "),s("p",[t._v("각 컨텍스트객체에는 "),s("strong",[t._v("VO, scope chain, this")]),t._v(" 라는 3가지 프로퍼티가 생성된다.")]),t._v(" "),s("p",[t._v("VO(Variable Object) - "),s("RouterLink",{attrs:{to:"/js/arguments.html"}},[t._v("arguments")]),t._v(", parameter를 포함한 variable이 존재")],1),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/js/scope.html"}},[t._v("scope")]),t._v(" - 접근가능한 VO의 유효범위")],1),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/js/scope.html#스코프체인"}},[t._v("scope chain")])],1),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/js/this.html"}},[t._v("this")]),t._v(" - this는 기본적으로 전역객체를 가리킨다가 함수를 어떻게 호출하느냐에따라 할당되는값이 결정된다.")],1),t._v(" "),s("p",[s("a",{attrs:{href:"https://velog.io/@tmmoond8/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9D%B8%ED%84%B0%EB%B7%B0-%ED%9B%84%EA%B8%B0-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B8-%EC%A0%95%EB%A6%AC-%EC%9E%91%EC%84%B1-%EC%A4%91#5.-%EC%8B%A4%ED%96%89%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8",target:"_blank",rel:"noopener noreferrer"}},[t._v("추가적으로 참고할만한 좋은 글"),s("OutboundLink")],1)]),t._v(" "),s("hr")])}),[],!1,null,null,null);s.default=e.exports}}]);