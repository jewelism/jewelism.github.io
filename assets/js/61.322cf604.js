(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{377:function(t,a,s){"use strict";s.r(a);var r=s(18),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"시작하기-앞서"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시작하기-앞서"}},[t._v("#")]),t._v(" 시작하기 앞서")]),t._v(" "),a("p",[t._v("우선, react 함수형 컴포넌트 기준으로 설명합니다.")]),t._v(" "),a("p",[t._v("react, vue 같은 ui 'library'의 역할이 무엇인지 생각해봐야합니다.")]),t._v(" "),a("p",[t._v("왜 이들이 라이브러리라고 불리는지, 무엇을 하는지 정확하게 알고 넘어가야합니다.")]),t._v(" "),a("p",[t._v("ui library는 ui 데이터(상태, 속성)가 변경되면 ui를 갱신해줍니다.")]),t._v(" "),a("p",[t._v("직접 DOM에 접근하여 ui를 갱신하는 것은 상당히 피곤한 일 입니다. 크로스브라우징 이슈를 신경써야하며, 비즈니스 로직과 ui를 갱신하는 로직이 섞여서 유지보수가 힘들어집니다.")]),t._v(" "),a("p",[t._v("위에서도 언급했던 것처럼 브라우저 API마다 다른 동작을 할 수 있는 가능성을 사전에 차단합니다. => 크로스 브라우징")]),t._v(" "),a("p",[t._v("라이브러리의 지원범위내의 브라우저라면, 브라우저에는 개발자가 의도하는대로 렌더링됩니다.")]),t._v(" "),a("p",[t._v("라이브러리에 버그가 있다면 라이브러리측에서 수정해주길 기다리거나, 직접 수정해서 사용하면 됩니다. => 제어역전")]),t._v(" "),a("p",[t._v("ui library 자체는 결국 단순 '렌더링'만 하기때문에 router 라던지 상태관리 등 다른 기능은 써드파티 라이브러리를 사용해야합니다.")]),t._v(" "),a("h1",{attrs:{id:"컴포넌트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#컴포넌트"}},[t._v("#")]),t._v(" 컴포넌트")]),t._v(" "),a("p",[t._v("이해하기쉽게 "),a("strong",[t._v("'html 엘리먼트의 집합체'")]),t._v(" 혹은 블럭이라고 표현할 수 있겠습니다.")]),t._v(" "),a("p",[t._v("마치 레고 블럭처럼 컴포넌트들을 조합하여 앱을 개발합니다.")]),t._v(" "),a("p",[t._v("vue에서는 vue 객체, react에서는 일반적으로 React Element tree를 리턴하는 자바스크립트 함수입니다.")]),t._v(" "),a("p",[t._v("아무것도 렌더링하지않으려면 null을 리턴해야합니다. (react에서는 컴포넌트가 undefined를 리턴하면 에러입니다.)")]),t._v(" "),a("p",[t._v("요약하면 리액트 컴포넌트는 react element tree or null을 반환하고 함수 이름이 PascalCase인 자바스크립트 함수입니다.")]),t._v(" "),a("p",[t._v("리액트 공식문서에서는 아래와 같이 설명하고 있습니다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("개념적으로 컴포넌트는 JavaScript 함수와 유사합니다.\n“props”라고 하는 임의의 입력을 받은 후,\n화면에 어떻게 표시되는지를 기술하는 React 엘리먼트를 반환합니다.\n")])])]),a("h1",{attrs:{id:"컴포넌트-설계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#컴포넌트-설계"}},[t._v("#")]),t._v(" 컴포넌트 설계")]),t._v(" "),a("p",[t._v("js숙련도가 있다면 컴포넌트를 잘 설계하는게 FE개발 실력의 핵심이라고 할 수 있습니다.")]),t._v(" "),a("p",[t._v("같은 기능을 가진 컴포넌트라도 설계는 사람마다 달라질 수 있죠.")]),t._v(" "),a("p",[t._v("그래서 아래에서 설명하는 컴포넌트 설계방법은 꽤 주관적이며 관점에 따라 다를 수 있습니다. 어찌보면 당연한 내용도 포함되어있고요.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("좋은 컴포넌트 개발의 핵심은 재활용 가능한 컴포넌트입니다.\n\n컴포넌트는 기본적으로 StateSetter(StateUpdater)가 호출되면 리렌더됩니다.\n\n성능관점에서 state와 props는 최대한 변경되지 않을수록 유리합니다.\n\nprops만 받아서 렌더만하는 컴포넌트는(프레젠테이션 컴포넌트) storybook을 활용하기 좋으며 쉽게 테스트하고 재활용 할 수 있습니다.\n\n모델렌더를 실현하기도 쉬워지고요. 모델렌더는 아래에서 다시 설명합니다.\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("최근 react에서는 함수형 컴포넌트를 작성하면서 hook API을 사용하게되는데, custom hook을 적극 활용하는게 좋습니다.\n\n마치 클래스 컴포넌트를 사용할때, 프레젠테이션과 컨테이너를 분리했던 것처럼요. \n\n프레젠테이션 컴포넌트 + 모델(hook)을 조합하면 이상적인 컴포넌트 구현입니다.\n\n컴포넌트에서 로직을 깔끔하게 분리해낼 수 있으며 로직의 재활용성과 가독성을 향상시킵니다. (관심사 분리)\n\n훅만 테스트하는건 거의 로직만 테스트하는거라, 테스트코드 작성도 상대적으로 매우 간편해집니다.\n\n상태와 로직, 템플릿이 마구 섞여져있을 수 있는데,\n\n상태를 관리하는 hook - props, state, ref, useMemo를 사용한 computed variable 등..\n\n로직을 관리하는 hook - useCallback을 이용한 메모이제이션된 함수들\n")])])]),a("p",[t._v("hook에 대한 자세한 내용은 "),a("RouterLink",{attrs:{to:"/js-react/hook-api.html"}},[t._v("여기를 참고")]),t._v("하세요")],1),t._v(" "),a("h2",{attrs:{id:"모델렌더-model-render"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#모델렌더-model-render"}},[t._v("#")]),t._v(" 모델렌더 model render")]),t._v(" "),a("p",[t._v("뷰가 상태를 갖는것이 아닌, 순수 js 객체가 상태를 가져야합니다.")]),t._v(" "),a("p",[t._v("같은 데이터라면 같은 렌더링이 되어야한다는 것입니다.")]),t._v(" "),a("p",[t._v("뷰를 직접 제어하지 않으므로 버그를 발생시키지않고 단순히 모델을 갱신해서 렌더를 발생시켜야합니다.")]),t._v(" "),a("p",[t._v("= DOM을 직접 조작하지말고 setState를 사용해라.")]),t._v(" "),a("p",[t._v("그래야 테스트코드도 작성하기 쉬워집니다.")]),t._v(" "),a("h2",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" props")]),t._v(" "),a("p",[t._v("극단적으로 표현하면...")]),t._v(" "),a("p",[t._v("state만 있더라도 컴포넌트를 개발할 수 있습니다.")]),t._v(" "),a("p",[t._v("props의 존재 이유는 사실 컴포넌트 재활용 말고는 없다고 봐도 됩니다.")]),t._v(" "),a("p",[t._v("무분별하게 컴포넌트를 나누기보단, 컴포넌트가 재활용될 가능성을 생각해보고 컴포넌트를 나누는게 좋습니다.")]),t._v(" "),a("p",[t._v("기본적으로 함수형 리액트 컴포넌트에서는 상위 컴포넌트를 리렌더할때 하위 컴포넌트들을 다시 호출하기 때문이죠.")]),t._v(" "),a("p",[t._v("물론 재활용을 안하더라도, 가독성이나 storybook등 다른 이유로 컴포넌트를 나눌수는 있겠지만, 본질에 대해 다시 생각해볼 필요는 있습니다.")]),t._v(" "),a("p",[t._v("그렇다고 극단적으로 성능관점에서 설계를 하라는 말은 아닙니다. 역할을 분리하는게 더 중요하죠.")]),t._v(" "),a("h2",{attrs:{id:"템플릿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿"}},[t._v("#")]),t._v(" 템플릿")]),t._v(" "),a("p",[t._v("템플릿 - 함수형 컴포넌트에서 리턴하는 React Element tree")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("템플릿에는 expression을 최소화합니다. - useMemo나 useCallback을 사용하여 변수나 함수만 바인딩하도록 합니다.\n\n템플릿에 로직을 직접 작성하지마세요.\n\nstatic markup에 해당하는 부분들은 가독성을 위해 기능별로 컴포넌트로 분리합니다.\n\n자주 렌더를 수행하는 구간에 필요하다면 React.memo를 활용해도 좋고요.\n")])])]),a("h2",{attrs:{id:"안티패턴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#안티패턴"}},[t._v("#")]),t._v(" 안티패턴")]),t._v(" "),a("h3",{attrs:{id:"템플릿내-로직"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿내-로직"}},[t._v("#")]),t._v(" 템플릿내 로직")]),t._v(" "),a("p",[t._v("위에서도 언급했지만, 템플릿엔 로직을 작성하지마세요.")]),t._v(" "),a("p",[t._v("테스트를 어렵게 만들고 가독성을 해칩니다.")]),t._v(" "),a("p",[t._v("1component 1hook 을 달성하려면 템플릿내 로직이 없어야합니다.")]),t._v(" "),a("h3",{attrs:{id:"렌더링-간섭"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#렌더링-간섭"}},[t._v("#")]),t._v(" 렌더링 간섭")]),t._v(" "),a("p",[t._v("위에서 컴포넌트는 state, props가 변경되면 리렌더되어야한다고 했습니다.")]),t._v(" "),a("p",[t._v("반대로 state, props외에 다른 요소들이 렌더에 영향을 주게되면 안티패턴이라고 할 수 있습니다.")]),t._v(" "),a("p",[t._v("대표적으로 DOM조작을 직접(ref를 사용하여 element를 조작하는것 또한 마찬가지입니다.)하거나, key를 사용해서 리렌더하는 방식입니다.")]),t._v(" "),a("p",[t._v("ref를 사용하는 자체가 나쁜게 아니라 react 역할인 DOM조작을 개발자가 직접 할필요가 없고, 방해해서는 안됩니다.")]),t._v(" "),a("h2",{attrs:{id:"가독성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#가독성"}},[t._v("#")]),t._v(" 가독성?")]),t._v(" "),a("h3",{attrs:{id:"조건부-렌더링"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#조건부-렌더링"}},[t._v("#")]),t._v(" 조건부 렌더링")]),t._v(" "),a("p",[t._v("템플릿에서 조건부 렌더링을 구현할때 가능하면 if 구문을 쓰지말고 삼항연산자나 && 연산자를 사용하는게 좋다고 생각합니다.")]),t._v(" "),a("p",[t._v("잠깐 &&을 짚고 넘어가면, falsy한 값이 있다면 그것을 먼저 반환한다. 그 뒤의 expression은 무시되며 연산하지도 않는다.")]),t._v(" "),a("p",[t._v("연산중에 truthy값이 있다면 그것을 반환한다.")]),t._v(" "),a("p",[t._v("그러므로 조건에 falsy한 값이 있는지 잘 확인해야한다.")]),t._v(" "),a("p",[t._v("예를 들면, 어떤 회원의 포인트를 렌더링한다고 하자. 포인트는 number형이다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("point "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("회원님의 포인트는 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("point"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("점 입니다"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("회원의 포인트가 0일때 단순히 0을 렌더링할것이고, '회원님의 ~' 부분은 렌더링되지 않을 것이다.")]),t._v(" "),a("p",[t._v("의도하는게 아니라면, 조건을 boolean형으로 적절히 변형하자.")]),t._v(" "),a("p",[t._v("이런 코드에서 문제점을 한눈에 발견하기 어려울 수도 있다.")]),t._v(" "),a("p",[t._v("조건이 복잡하다면 별도 변수로 추출하여(useMemo) 보기좋게 해주면 된다.")]),t._v(" "),a("p",[t._v("삼항연산자는 2개 이상 중첩하여 사용하면 상대적으로 가독성이 떨어지는 것 같다.")]),t._v(" "),a("p",[t._v("그리고 조건은 boolean형으로 명시적으로 변환해주는게 좋은데,")]),t._v(" "),a("p",[t._v("이유는.. 렌더링 테스트를 작성한다고 했을때, 아래와 같은 간단한 컴포넌트가 있다고 가정하면..")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" useState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onChangeInput")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInput")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrapper"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("App"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"control"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" onChange"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("onChangeInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myInput "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("초기렌더링은, wrapper 내부에, title, control, input 필드 이렇게 나타난다.")]),t._v(" "),a("p",[t._v("하지만.. 조건을 보면 myInput이 string이다.")]),t._v(" "),a("p",[t._v("그러면 빈문자열이 당연히 렌더되는것이라고 생각하고, 테스트 프레임워크에서는 output을")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("wrapper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div className=\"title\">App</div>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div className=\"control\"><input value={myInput} onChange={onChangeInput}/></div>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("이런식으로 나타나게된다. (예시임)")]),t._v(" "),a("p",[t._v("그러면 wrapper는 2개의 element가 있어야하는데, 보이지 않지만 빈 문자열이 렌더링됐으므로 마치 3개가 있는것처럼 보인다.")]),t._v(" "),a("p",[t._v("에러가 아닌데 에러처럼 보인다.")]),t._v(" "),a("p",[t._v("위에서 언급한것처럼 0을 렌더링한다던지.. 이런 문제를 해결하기위해")]),t._v(" "),a("p",[t._v("myInput => !!myInput 이런식으로 변경하도록 하자.")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("ref: 머릿속에 있던 내용과 실전 리액트 프로그래밍이라는 책")]),t._v(" "),a("p",[t._v("그리고 "),a("a",{attrs:{href:"https://www.bsidesoft.com/8267",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.bsidesoft.com/8267"),a("OutboundLink")],1),t._v(" 의 저자(선생님)의 가르침")])])}),[],!1,null,null,null);a.default=e.exports}}]);