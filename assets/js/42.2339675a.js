(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{358:function(t,s,a){"use strict";a.r(s);var n=a(18),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"storage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[t._v("#")]),t._v(" storage")]),t._v(" "),s("p",[t._v("window객체에 localStorage, sessionStorage 라는 두개의 key value 저장소가 있다.")]),t._v(" "),s("p",[s("s",[t._v("react-native(이하 rn)의 AsyncStorage와 같은 인터페이스이다. (사용방법이 같다. 리턴은 조금 다르지만)")])]),t._v(" "),s("p",[t._v("value에는 문자열이나 숫자가 들어갈수있다(숫자도 문자열로 자동변환됨 => getItem하면 문자열로 리턴)")]),t._v(" "),s("p",[t._v("이때 object를 저장하고싶다면 value에 object를")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("이런식으로 문자열로 변환하여 넣고,")]),t._v(" "),s("p",[t._v("getItem할때")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'someKey'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("해서 사용하면된다.")]),t._v(" "),s("p",[t._v("사용자에 하드디스크에 저장되므로 탭을 여러개 띄워도 공유가 가능하다.")]),t._v(" "),s("p",[t._v("당연히 브라우저나 컴퓨터를 종료했다가 다시 실행해도 값이 남아있다.")]),t._v(" "),s("p",[t._v("하지만 브라우저끼리의 호환은 안된다.")]),t._v(" "),s("p",[t._v("sessionStorage은 페이지세션이 종료되면 사라진다.")]),t._v(" "),s("p",[t._v("(해당 탭 종료하거나.. 탭을 여러개 띄워놓고 공유가 안됨. 각각의 세션 스토리지가 생김)")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boseok'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boseok`s message!!!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boseok'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//boseok's message!!!")]),t._v("\n")])])]),s("p",[t._v("위와같은 결과를 얻을수있다")]),t._v(" "),s("p",[t._v("rn에서는 getItem과 setItem이 Promise를 리턴한다. (비동기)")]),t._v(" "),s("p",[t._v("하지만 js의 window객체- 에서는 동기적으로 리턴한다")]),t._v(" "),s("p",[t._v("정리-")]),t._v(" "),s("p",[t._v("localStorage, sessionStorage 키값 저장소가 있음.")]),t._v(" "),s("p",[t._v("같은 인터페이스임 - 사용법(메소드)이 같음")]),t._v(" "),s("p",[t._v("비동기api가 아니라서 큰 값 저장하기에는 무리가 있음 - blocking")]),t._v(" "),s("p",[t._v("큰 값을 저장하고 싶다면 indexedDB등의 DB를 사용")]),t._v(" "),s("p",[t._v("getItem(문자열키)")]),t._v(" "),s("p",[t._v("setItem(문자열키, 저장할문자열값)")]),t._v(" "),s("p",[t._v("그외의 메소드들")]),t._v(" "),s("p",[t._v("removeItem(key) => 아이템 한개 삭제")]),t._v(" "),s("p",[t._v("clear(key) => this storage 모두 삭제")])])}),[],!1,null,null,null);s.default=e.exports}}]);