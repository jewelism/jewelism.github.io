(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{425:function(t,a,s){"use strict";s.r(a);var v=s(18),e=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"함수형-자바스크립트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수형-자바스크립트"}},[t._v("#")]),t._v(" 함수형 자바스크립트")]),t._v(" "),a("p",[t._v("요즘 함수형 프로그래밍이 인기가 많아서, 함수형 자바스크립트에 대해 간단하게 설명하려고 한다!")]),t._v(" "),a("p",[t._v("우선 함수형 프로그래밍은 상태를 공유하는것과 데이터변조를(예상치 못한, 사이드이펙트) 방지할수있다.")]),t._v(" "),a("p",[t._v("그리고 사실 함수형은 자바스크립트에서 중요한 컨셉중 하나다. (나머지 하나는 프로토타입)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 순수 함수\n2. 불변성\n3. 사이드이펙트 방지\n4. 단순한 함수의 구성\n5. 함수형 언어들: Haskell, Scala, Lisp, F Sharp, ...\n")])])]),a("h2",{attrs:{id:"순수-함수의-특징"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#순수-함수의-특징"}},[t._v("#")]),t._v(" 순수 함수의 특징")]),t._v(" "),a("ul",[a("li",[t._v("참조 투명성 => 함수가 동일한 입력을 받으면 동일한 출력을 내보낸다. => 외부 변수를 제거한다. => 전체 로직을 파악하기 쉽고 테스트가 쉽다.")])]),t._v(" "),a("p",[t._v("이어서..")]),t._v(" "),a("p",[t._v("자바스크립트가 함수형을 지원하는 기능들")]),t._v(" "),a("p",[t._v("자바스크립트에서 함수는 일급객체이다.")]),t._v(" "),a("p",[t._v("고차함수와 FP기법(커링.. etc)을 활용")]),t._v(" "),a("h2",{attrs:{id:"high-order-funtion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#high-order-funtion"}},[t._v("#")]),t._v(" high order funtion")]),t._v(" "),a("ol",[a("li",[t._v("함수를 파라미터로 전달받는 함수(functions as arguments) => Array.prototype.map 을 떠올리면 된다.")]),t._v(" "),a("li",[t._v("함수를 리턴받는 함수(functions as values) => 커링을 생각하시면 된다.")])]),t._v(" "),a("h2",{attrs:{id:"순수함수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#순수함수"}},[t._v("#")]),t._v(" 순수함수")]),t._v(" "),a("p",[t._v("같은 input이라면 항상 같은 리턴값을 가지는 함수.")]),t._v(" "),a("p",[t._v("외부의 값을 변경하지않는다. Date.now 같은 함수도 내부에서 사용하지않고(호출할때마다 매번 결과값이 달라지므로), Disk IO, network IO등 사이드이펙트가 없어야한다.")]),t._v(" "),a("p",[t._v("조합하기좋다. 함수를 다른함수의 인자로 넘길수있다.")]),t._v(" "),a("p",[t._v("모듈화하기좋고 테스트코드작성하기 좋다.")]),t._v(" "),a("p",[t._v("함수들이 단순해진다.")]),t._v(" "),a("p",[t._v("결국 안전한 함수를 추구하는것이다.")]),t._v(" "),a("p",[t._v("함수형 자바스크립트라는 책에서는 아래처럼 설명하고 있습니다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("- 주어진 입력에만 의존할 뿐,평가 도중 또는 호출 간 변경될 수 있는 숨겨진 값이나 외부상태와 무관하게 작동합니다.\n\n- 전역 객체나 레퍼런스로 전달된 매개변수를 수정하는 등 함수 스코프 밖에서 어떠한 변경도 일으키지 않습니다.\n")])])]),a("p",[t._v("side-effect")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("• 전역 범위에서 변수,속성，자료구조를 변경\n• 함수의 원래 인수 값을 변경\n• 사용자 입력을 처리\n• 예외를 일으킨 해당 함수가 붙잡지 않고(catch) 그대로 예외를 던짐(throw)\n• 화면 또는 로그 파일에 출력\n• HTML 문서， 브라우저 쿠키， DB에 질의\n")])])]),a("h2",{attrs:{id:"커링"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#커링"}},[t._v("#")]),t._v(" 커링")]),t._v(" "),a("p",[t._v("함수의 인수를 미리 세팅하거나 부분 평가하기 위해 함수 기능을 추상화한다.")]),t._v(" "),a("p",[t._v("여러 함수들로 분리하여 함수 크기를 줄이고, 함수의 합성을 쉽게하여 재활용성을 높일 수 있습니다.")]),t._v(" "),a("p",[t._v("함수를 합성하려면 side-effect가 없어야합니다.")]),t._v(" "),a("p",[t._v("필요한 것은 인수를 통해 전달받습니다.")])])}),[],!1,null,null,null);a.default=e.exports}}]);